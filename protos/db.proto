syntax = "proto3";


// Data needs to be sent each time
// Server can't create a Hanlder
// instance without it
message HandlerContext {
    string context = 1;
    string handler_type = 2;
    string handler_params = 3;
}

// Data for 'native_query' call
message NativeQueryContext {
    HandlerContext context = 1;
    string query = 2;
}

// Represents server ouput without
// data. like 'OK' or 'ERROR'
message StatusResponse {
    bool success = 1;
    string error_message = 2;
}

// Represents server output with
// some data inside. SELECT result for instance
message Response {
    string type = 1;
    bytes data_frame = 2;
    int32 query = 3;
    int32 error_code = 4;
    string error_message = 5;
}

// Interface exported by the server.
service DBService {
  // A simple RPC.
  //
  // Check connection to the specified database
  //
  // by creating an appropriate type of Handler instance
  rpc CheckConnection(HandlerContext) returns (StatusResponse) {}

  // A simple RPC.
  //
  // Execute native query (string) and returns the result
  //
  // wrapped into Response object
  rpc NativeQuery(NativeQueryContext) returns (Response) {}
}
